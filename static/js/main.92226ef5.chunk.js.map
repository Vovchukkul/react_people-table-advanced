{"version":3,"sources":["helper/getLinkClass.tsx","components/Navbar.tsx","App.tsx","utils/searchHelper.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","helper/filterPeople.tsx","components/HomePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","_ref","isActive","classNames","Navbar","_jsx","className","role","children","_jsxs","NavLink","to","App","Outlet","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","PeopleFilters","searchParams","setSearchParams","useSearchParams","query","get","userSex","centuries","getAll","Link","search","sex","type","placeholder","onChange","event","params","setSearchWith","target","map","century","includes","filter","cent","href","Loader","PersonLink","person","name","linkClass","concat","slug","SortBy","PeopleTable","people","useParams","findParent","parent","find","sort","order","sortedPeople","sortPeople","isReversed","a","b","localeCompare","keys","sortName","column","toLowerCase","father","fatherName","mother","motherName","born","died","async","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","setPeople","useState","isLoading","setIsLoading","error","setError","filteredPeople","length","Math","ceil","_person$motherName","_person$fatherName","filterPeople","useEffect","data","catch","finally","_Fragment","HomePage","Root","Router","Routes","Route","path","element","index","Navigate","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.92226ef5.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n","import { NavLink } from 'react-router-dom';\nimport { getLinkClass } from '../helper/getLinkClass';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-light is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n      <Outlet />\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const userSex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchWith({ query: event.target.value || null });\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={userSex === 'all' ? 'is-active' : ''}\n          to={{\n            search: getSearchWith(searchParams, { sex: null }),\n          }}\n        >\n          All\n        </Link>\n        <Link\n          className={userSex === 'm' ? 'is-active' : ''}\n          to={{\n            search: getSearchWith(searchParams, { sex: 'm' }),\n          }}\n        >\n          Male\n        </Link>\n        <Link\n          className={userSex === 'f' ? 'is-active' : ''}\n          to={{\n            search: getSearchWith(searchParams, { sex: 'f' }),\n          }}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {[16, 17, 18, 19, 20].map(century => (\n              <Link\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(century.toString()),\n                })}\n                to={{\n                  search: getSearchWith(searchParams, {\n                    centuries: centuries.includes(century.toString())\n                      ? centuries.filter(cent => +cent !== century)\n                      : [...centuries, century.toString()],\n                  }),\n                }}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              to={{ search: getSearchWith(searchParams, { centuries: [] }) }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport { Person } from '../types';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  if (!person) {\n    return null;\n  }\n\n  const { name, sex } = person;\n  const linkClass = sex === 'f'\n    ? 'has-text-danger'\n    : '';\n\n  return (\n    <Link to={`${person?.slug}`} className={linkClass}>\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\nimport { getSearchWith } from '../utils/searchHelper';\n\ntype Props = {\n  people: Person[];\n};\n\nexport enum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n\nconst sortPeople = (\n  people: Person[],\n  sort: string | null,\n  order: string | null,\n): Person[] => {\n  const isReversed: number = order ? -1 : 1;\n\n  return [...people].sort((a, b) => {\n    switch (sort) {\n      case 'name':\n      case 'sex':\n        return (a[sort] as string).localeCompare(b[sort]) * isReversed;\n      case 'born':\n      case 'died':\n        return (+a[sort] - +b[sort]) * isReversed;\n      default:\n        return 0;\n    }\n  });\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  function findParent(parent: string | null) {\n    return people.find(person => person.name === parent);\n  }\n\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n  const sortedPeople: Person[] = sortPeople(people, sort, order);\n\n  const sortByColumn = (column: string) => {\n    if (sort !== column) {\n      return { sort: column, order: null };\n    }\n\n    if (!order) {\n      return { sort: column, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.keys(SortBy).map((sortName: string) => (\n            <th key={sortName}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {sortName}\n                <Link\n                  to={{\n                    search: getSearchWith(\n                      searchParams,\n                      sortByColumn(sortName.toLowerCase()),\n                    ),\n                  }}\n                  aria-label={`Sort by ${sortName}`}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('fas fa-sort', {\n                      'fa-sort-up': sort === sortName.toLowerCase() && !order,\n                      'fa-sort-down': sort === sortName.toLowerCase() && order,\n                    })}\n                    />\n                  </span>\n                </Link>\n              </span>\n            </th>\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedPeople.map((person) => {\n          const father = findParent(person.fatherName);\n          const mother = findParent(person.motherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames({\n                'has-background-warning': person.slug === slug,\n              })}\n              aria-describedby={`person-${person.slug}-label`}\n            >\n              <td>\n                <PersonLink\n                  person={person}\n                  aria-label={`Details for ${person.name}`}\n                />\n              </td>\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : person.motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : person.fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { filterPeople } from '../helper/filterPeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const filteredPeople = filterPeople(people, query, sex, centuries);\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(data))\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <h1 className=\"title mx-5\">People Page</h1>\n        <div className=\"block\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n              <div className=\"column is-7-tablet is-narrow-desktop\">\n                <PeopleFilters />\n              </div>\n              <div className=\"column\">\n                <div className=\"box table-container\">\n                  {error && (\n                    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                      Something went wrong\n                    </p>\n                  )}\n                  {!filteredPeople.length && !isLoading && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                  <PeopleTable people={filteredPeople} />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function filterPeople(\n  people: Person[],\n  query: string,\n  sex: string,\n  centuries: string[],\n) {\n  let filteredPeople = [...people];\n\n  if (sex) {\n    filteredPeople = filteredPeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length) {\n    filteredPeople = filteredPeople.filter(person => centuries\n      .includes(Math.ceil(person.born / 100).toString()));\n  }\n\n  if (query) {\n    filteredPeople = filteredPeople.filter(person => person.name.toLowerCase()\n      .includes(query.toLowerCase())\n      || person.motherName?.toLowerCase()\n        .includes(query.toLowerCase())\n      || person.fatherName?.toLowerCase()\n        .includes(query.toLowerCase()));\n  }\n\n  return filteredPeople;\n}\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div className=\"section\">\n      <h1 className=\"title mx-5\">Home Page</h1>\n    </div>\n  );\n};\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}