{"version":3,"sources":["helper/getLinkClass.tsx","components/Navbar.tsx","App.tsx","utils/searchHelper.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","helper/filterPeople.tsx","components/HomePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Navbar","className","role","to","App","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","PeopleFilters","useSearchParams","searchParams","setSearchParams","query","get","userSex","centuries","getAll","search","sex","type","placeholder","onChange","event","params","setSearchWith","target","map","century","includes","filter","cent","href","Loader","PersonLink","person","name","linkClass","slug","SortBy","PeopleTable","people","useParams","findParent","parent","find","sort","order","sortedPeople","isReversed","a","b","localeCompare","sortPeople","keys","sortName","column","toLowerCase","father","fatherName","mother","motherName","born","died","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","filteredPeople","length","Math","ceil","filterPeople","useEffect","getPeople","data","catch","finally","HomePage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3fc818b8.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'is-active': isActive },\n);\n","import { NavLink } from 'react-router-dom';\nimport { getLinkClass } from '../helper/getLinkClass';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-light is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n      <Outlet />\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import classNames from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const userSex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchWith({ query: event.target.value || null });\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={userSex === 'all' ? 'is-active' : ''}\n          to={{\n            search: getSearchWith(searchParams, { sex: null }),\n          }}\n        >\n          All\n        </Link>\n        <Link\n          className={userSex === 'm' ? 'is-active' : ''}\n          to={{\n            search: getSearchWith(searchParams, { sex: 'm' }),\n          }}\n        >\n          Male\n        </Link>\n        <Link\n          className={userSex === 'f' ? 'is-active' : ''}\n          to={{\n            search: getSearchWith(searchParams, { sex: 'f' }),\n          }}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {[16, 17, 18, 19, 20].map(century => (\n              <Link\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(century.toString()),\n                })}\n                to={{\n                  search: getSearchWith(searchParams, {\n                    centuries: centuries.includes(century.toString())\n                      ? centuries.filter(cent => +cent !== century)\n                      : [...centuries, century.toString()],\n                  }),\n                }}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              to={{ search: getSearchWith(searchParams, { centuries: [] }) }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport { Person } from '../types';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  if (!person) {\n    return null;\n  }\n\n  const { name, sex } = person;\n  const linkClass = sex === 'f'\n    ? 'has-text-danger'\n    : '';\n\n  return (\n    <Link to={`${person?.slug}`} className={linkClass}>\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams, useSearchParams, Link } from 'react-router-dom';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\nimport { getSearchWith } from '../utils/searchHelper';\n\ntype Props = {\n  people: Person[];\n};\n\nexport enum SortBy {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n\nconst sortPeople = (\n  people: Person[],\n  sort: string | null,\n  order: string | null,\n): Person[] => {\n  const isReversed: number = order ? -1 : 1;\n\n  return [...people].sort((a, b) => {\n    switch (sort) {\n      case 'name':\n      case 'sex':\n        return (a[sort] as string).localeCompare(b[sort]) * isReversed;\n      case 'born':\n      case 'died':\n        return (+a[sort] - +b[sort]) * isReversed;\n      default:\n        return 0;\n    }\n  });\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  function findParent(parent: string | null) {\n    return people.find(person => person.name === parent);\n  }\n\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n  const sortedPeople: Person[] = sortPeople(people, sort, order);\n\n  const sortByColumn = (column: string) => {\n    if (sort !== column) {\n      return { sort: column, order: null };\n    }\n\n    if (!order) {\n      return { sort: column, order: 'desc' };\n    }\n\n    return { sort: null, order: null };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.keys(SortBy).map((sortName: string) => (\n            <th key={sortName}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {sortName}\n                <Link to={{\n                  search: getSearchWith(\n                    searchParams,\n                    sortByColumn(sortName.toLowerCase()),\n                  ),\n                }}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('fas fa-sort', {\n                      'fa-sort-up': sort === sortName.toLowerCase() && !order,\n                      'fa-sort-down': sort === sortName.toLowerCase() && order,\n                    })}\n                    />\n                  </span>\n                </Link>\n              </span>\n            </th>\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedPeople.map((person) => {\n          const father = findParent(person.fatherName);\n          const mother = findParent(person.motherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames({\n                'has-background-warning': person.slug === slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : person.motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : person.fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { filterPeople } from '../helper/filterPeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const filteredPeople = filterPeople(people, query, sex, centuries);\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(data))\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <h1 className=\"title mx-5\">People Page</h1>\n        <div className=\"block\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n              <div className=\"column is-7-tablet is-narrow-desktop\">\n                <PeopleFilters />\n              </div>\n              <div className=\"column\">\n                <div className=\"box table-container\">\n                  {error && (\n                    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                      Something went wrong\n                    </p>\n                  )}\n                  {!filteredPeople.length && !isLoading && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                  <PeopleTable people={filteredPeople} />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function filterPeople(\n  people: Person[],\n  query: string,\n  sex: string,\n  centuries: string[],\n) {\n  let filteredPeople = [...people];\n\n  if (sex) {\n    filteredPeople = filteredPeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length) {\n    filteredPeople = filteredPeople.filter(person => centuries\n      .includes(Math.ceil(person.born / 100).toString()));\n  }\n\n  if (query) {\n    filteredPeople = filteredPeople.filter(person => person.name.toLowerCase()\n      .includes(query.toLowerCase())\n      || person.motherName?.toLowerCase()\n        .includes(query.toLowerCase())\n      || person.fatherName?.toLowerCase()\n        .includes(query.toLowerCase()));\n  }\n\n  return filteredPeople;\n}\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div className=\"section\">\n      <h1 className=\"title mx-5\">Home page</h1>\n    </div>\n  );\n};\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}